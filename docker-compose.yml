version: '3.9'

services:
  web:
    container_name: web
    # image: apptemplate.azurecr.io/react
    build:
      context: ./web
      dockerfile: Dockerfile
      target: development
    ports:
      - 3000:${REACT_APP}
    environment:
      - REACT_APP=${REACT_APP}
    command: wait-for postgres:5432 -t 40 -- npm start
    volumes:
      - .web:/home/node/app
    depends_on:
      - backend
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: development
    command: wait-for postgres:5432 -t 40 -- npm run dev
    ports:
      - $API_PORT:${API_PORT}
    environment:
      - API_PORT=${API_PORT}
    volumes:
      - .backend:/home/node/app
    depends_on:
      - postgres

  postgres:
    container_name: postgres
    image: postgres:latest
    restart: always
    hostname: postgres
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres-data:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    depends_on:
      - postgres
    ports:
      - "5555:8080"
    environment:
      PGADMIN_DEFAULT_EMAIL: pgadmin4@pgadmin.org
      PGADMIN_DEFAULT_PASSWORD: admin
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    restart: unless-stopped
volumes:
  postgres-data:
  pgadmin-data:
